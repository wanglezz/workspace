[{"content":"ssh是什么 SSH（Secure Shell，安全外壳）是一种网络安全协议，通过加密和认证机制实现安全的访问和文件传输等业务。\nssh原理 非对称加密 非对称加密使用一对关联的SSH密钥。私钥由生成的一方保管。公钥可以发送给任何请求通信的其他人。\n私钥 签名：私钥用于对数据签名，证明数据的来源和完整性。 解密：某些情况下，私钥也用于解密公钥加密的数据。 公钥 验证签名：用于验证私钥生成的签名。 加密：某些情况下，公钥也可用于加密数据，只有相应的私钥可以解密。 ssh代理 主要用于管理ssh私钥\n密钥管理 代理可以储存多个私钥，用户不需要每次使用时手动输入密码和路径。 自动认证 用户尝试连接远程服务器时，ssh代理会自动提供相应私钥进行认证。 安全性 私钥存储在ssh代理中减少了私钥暴露的风险。 ","permalink":"http://localhost:1313/tech/ssh/","summary":"ssh是什么 SSH（Secure Shell，安全外壳）是一种网络安全协议，通过加密和认证机制实现安全的访问和文件传输等业务。\nssh原理 非对称加密 非对称加密使用一对关联的SSH密钥。私钥由生成的一方保管。公钥可以发送给任何请求通信的其他人。\n私钥 签名：私钥用于对数据签名，证明数据的来源和完整性。 解密：某些情况下，私钥也用于解密公钥加密的数据。 公钥 验证签名：用于验证私钥生成的签名。 加密：某些情况下，公钥也可用于加密数据，只有相应的私钥可以解密。 ssh代理 主要用于管理ssh私钥\n密钥管理 代理可以储存多个私钥，用户不需要每次使用时手动输入密码和路径。 自动认证 用户尝试连接远程服务器时，ssh代理会自动提供相应私钥进行认证。 安全性 私钥存储在ssh代理中减少了私钥暴露的风险。 ","title":"SSH"},{"content":"创建远程库 在github.com创建远程库\n创建本地库 先初始化本地库 git init 提交当前内容到工作区 git add . 注册自己的邮箱和用户名 git config --global user.email \u0026#34;example@example.com\u0026#34; git config --global user.name \u0026#34;yourname\u0026#34; 添加远程库 git remote add origin git@github.com:yourname/project.git 提交到本地仓库 git commit -m \u0026#34;note\u0026#34; ssh配置 初次提交到远程库会报错，这是因为没有配置ssh密钥并添加到ssh代理。github的ssh连接采用的是非对称加密，关于非对称加密可见SSH，配置ssh的过程如下MarkDown语法\n在本地生成ssh密钥对 ssh-keygen -t ed25519 -C \u0026#34;your_email@example.com\u0026#34; 添加私钥到ssh代理 eval \u0026#34;$(ssh-agent -s)\u0026#34;//启动ssh代理 ssh-add ~/.ssh/id_ed25519 将公钥添加到github账户 cat ~/.ssh/id_ed25519.pub 在github上创建一个新的SSH key，并将生成的内容填入\n上传远程库 完成上述步骤后应该可以成功上传远程仓库了。🎉\ngit push origin main ","permalink":"http://localhost:1313/tech/local-to-remote/","summary":"创建远程库 在github.com创建远程库\n创建本地库 先初始化本地库 git init 提交当前内容到工作区 git add . 注册自己的邮箱和用户名 git config --global user.email \u0026#34;example@example.com\u0026#34; git config --global user.name \u0026#34;yourname\u0026#34; 添加远程库 git remote add origin git@github.com:yourname/project.git 提交到本地仓库 git commit -m \u0026#34;note\u0026#34; ssh配置 初次提交到远程库会报错，这是因为没有配置ssh密钥并添加到ssh代理。github的ssh连接采用的是非对称加密，关于非对称加密可见SSH，配置ssh的过程如下MarkDown语法\n在本地生成ssh密钥对 ssh-keygen -t ed25519 -C \u0026#34;your_email@example.com\u0026#34; 添加私钥到ssh代理 eval \u0026#34;$(ssh-agent -s)\u0026#34;//启动ssh代理 ssh-add ~/.ssh/id_ed25519 将公钥添加到github账户 cat ~/.ssh/id_ed25519.pub 在github上创建一个新的SSH key，并将生成的内容填入\n上传远程库 完成上述步骤后应该可以成功上传远程仓库了。🎉\ngit push origin main ","title":"本地库上传Github"},{"content":"基础 语法 标题 # + space 段落 空白行 换行 space*2+enter 加粗 Bold or Bold 引用 \u0026gt; 列表 number + . 代码 code 分隔线 *** or \u0026mdash; or ___ 链接 url 图片 ![图片]（） 转义字符 \\ 扩展 代码块 #include\u0026lt;stdio.h\u0026gt; int main() { printf(\u0026#34;Hello World!\u0026#34;); return 0; } 表格 语法 描述 Hello World 脚注 这是一个示例[^1] ([^1]:this is a example)\n标题编号 ### Heading {#custom-id}\n删除线 删除线\n任务列表 学习MarkDown 背单词 ","permalink":"http://localhost:1313/tech/markdown%E8%AF%AD%E6%B3%95/","summary":"基础 语法 标题 # + space 段落 空白行 换行 space*2+enter 加粗 Bold or Bold 引用 \u0026gt; 列表 number + . 代码 code 分隔线 *** or \u0026mdash; or ___ 链接 url 图片 ![图片]（） 转义字符 \\ 扩展 代码块 #include\u0026lt;stdio.h\u0026gt; int main() { printf(\u0026#34;Hello World!\u0026#34;); return 0; } 表格 语法 描述 Hello World 脚注 这是一个示例[^1] ([^1]:this is a example)\n标题编号 ### Heading {#custom-id}\n删除线 删除线\n任务列表 学习MarkDown 背单词 ","title":""},{"content":"Annotator 该插件的主要作用就是阅读pdf以及制作批注\n手动设置文档属性annotation-target链接到指定的pdf就可以实现pdf的阅读和批注。 Calendar ","permalink":"http://localhost:1313/tech/obsidian-plugins/","summary":"Annotator 该插件的主要作用就是阅读pdf以及制作批注\n手动设置文档属性annotation-target链接到指定的pdf就可以实现pdf的阅读和批注。 Calendar ","title":"Obsidian插件"}]